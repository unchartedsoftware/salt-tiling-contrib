// The following words occur most frequently at the following centers,
// distributed with radia proportional to the given rs:
// word: aaaa	cx: 11.500000	cy: 12.500000	r: 3.121
// word: bbbb	cx: 13.500000	cy: 15.500000	r: 1.136
// word: cccc	cx: 11.500000	cy: 6.500000	r: 6.074
// word: dddd	cx: 0.500000	cy: 8.500000	r: 5.165
// word: eeee	cx: 14.500000	cy: 11.500000	r: 3.132
// word: ffff	cx: 13.500000	cy: 4.500000	r: 5.698
// word: gggg	cx: 14.500000	cy: 14.500000	r: 3.008
// word: hhhh	cx: 11.500000	cy: 12.500000	r: 6.992
// word: iiii	cx: 14.500000	cy: 10.500000	r: 1.973
// word: jjjj	cx: 3.500000	cy: 9.500000	r: 2.967
// word: kkkk	cx: 4.500000	cy: 0.500000	r: 4.269
// word: llll	cx: 14.500000	cy: 7.500000	r: 6.809
// word: mmmm	cx: 8.500000	cy: 1.500000	r: 5.583
// word: nnnn	cx: 7.500000	cy: 13.500000	r: 1.677
// word: oooo	cx: 7.500000	cy: 14.500000	r: 3.537
// word: pppp	cx: 13.500000	cy: 14.500000	r: 2.587
//

csvSchema {
	rowSize = 3
	x { type = double, index = 0 }
	y { type = double, index = 1 }
	text { type = string, index = 2 }
}
spark { master = local, app.name = test }
sparkCsv { delimiter = "\t", header = false }
tiling {
	levels = [0,1,2,3,4]
	bins = 1
	source = "src/test/resources/tile-topic-data.csv"
}
fileOutput {
	dest="build/tmp/test_file_output"
	layer=tile_topics
}

topics {
	xColumn = x
	yColumn = y
	textColumn = text
	projection = cartesian
	xyBounds = [0, 0, 16, 16]
}
"tf-idf" {
	words = 5
}
lda {
	topics = 4
	wordsPerTopic = 5
	topicsPerDocument = 5
}

